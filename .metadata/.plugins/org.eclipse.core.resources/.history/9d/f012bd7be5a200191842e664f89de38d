package com.biz.book.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.biz.book.model.BookVO;

@Controller
public class BookController {

	@RequestMapping(value="book",method=RequestMethod.GET)
	public String book_insert(Model model) {
		model.addAttribute("BODY","BOOK_INSERT");
		return "home";
	}
	
	// old버전
	@RequestMapping(value = "book_old",method = RequestMethod.POST)
	public String book_insert(String b_title,
			String b_comp, String b_auth,
			String b_price, Model model) {
		
		model.addAttribute("b_title", b_title);
		model.addAttribute("b_comp", b_comp);
		model.addAttribute("b_auth", b_auth);
		model.addAttribute("b_price", b_price);
		model.addAttribute("BODY", "BOOK_VIEW");
		return "home";
	}
	
	/*
	 * form으로 데이터를 받을때
	 * input box에 설정된 변수들을 매게변수에 일일이 나열하지 않고
	 * 
	 *  VO 클래스를 만들어서 @ModelAttribute로 받는다.
	 *  
	 *  spring에서는
	 *  form에서 보내는 데이터를 받을때
	 *  form의 input box에 설정된 name 속성 값과 일치하는
	 *  필드(맴버변수)들을 선언하고, 
	 *  getter, setter, 생성자가 있는 vo를 만들어서
	 *  @ModelAttribute 매개변수로 사용하면
	 *  
	 *  자동으로 해당 클래스를 객체로 선언하고 
	 *  각 필드에 값을 setting해서 사용할수 있도록 구성한다.
	 */
	@RequestMapping(value = "book", method = RequestMethod.POST)
	public String book_insert(@ModelAttribute BookVO bookVO,Model model) {
		
		model.addAttribute("Book", bookVO);
		model.addAttribute("BODY", "BOOK_VIEW");
		return "home";
	}
}
